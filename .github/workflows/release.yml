name: Build, Release, and Docker

on:
  push:
    tags:
      - 'v*'

jobs:
  build-jar:
    name: Build JAR
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build JAR with Gradle
        run: ./gradlew clean build -x test

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: app/build/libs/app.jar
          if-no-files-found: error

  build-native:
    name: Build Native Binaries
    needs: build-jar
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            output_name: sqlift-linux-x64
            native_opts: "--static --no-fallback"
          - os: macos-13
            arch: x64
            output_name: sqlift-macos-x64
            native_opts: "--no-fallback"
          - os: macos-14
            arch: arm64
            output_name: sqlift-macos-arm64
            native_opts: "--no-fallback"
    steps:
      - uses: actions/checkout@v3

      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: app/build/libs/

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Native Image
        run: |
          native-image -jar app/build/libs/app.jar -H:Name=${{ matrix.output_name }} ${{ matrix.native_opts }}

      - name: Strip Binary
        run: |
          strip ${{ matrix.output_name }} || true

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output_name }}
          path: ${{ matrix.output_name }}
          if-no-files-found: error

  release:
    needs: build-native
    runs-on: ubuntu-24.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/sqlift-linux-x64/sqlift-linux-x64
            artifacts/sqlift-macos-x64/sqlift-macos-x64
            artifacts/sqlift-macos-arm64/sqlift-macos-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: build-jar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: app/build/libs/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract repository name to lowercase
        id: repo-name
        run: |
          echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ steps.repo-name.outputs.REPO_NAME }}-cli:${{ github.ref_name }}
            ghcr.io/${{ steps.repo-name.outputs.REPO_NAME }}-cli:latest